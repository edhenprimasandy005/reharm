@mixin mq($breakpoints) {
  @if ($breakpoints) {
    @media only screen and (max-width: $breakpoints) { @content; }
  } @else {
    @media only screen and (max-width: $s-small) {
      @content;
    }
  }
}  

@mixin border-box {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box; 
}

@mixin clearfix() {
  &:before,
  &:after {
    content: " ";
    display: table;
  }
  &:after {
    clear: both;
  }
}

@mixin font-face($font-family, $size, $weight: normal, $style: normal, $transform: none) {
  font-family: $font-family;
  font-size: $size;
  font-weight: $weight;
  font-style: $style;
  text-transform: $transform;
}

@mixin image-cover($ratio, $size: cover) { // For wrapping image in ratio 
  #{'.image-cover'} { //wrap with class .image-cover
    position: relative;
    width: 100%;
    padding-bottom: $ratio;
    .image {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background-position: center;
      background-repeat: no-repeat;
      background-size: $size;
    }
    img {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      object-fit: $size;
    }
  }
}

@mixin box-shadow {
  -webkit-box-shadow: 0px 2px 5px 1px rgba(0, 0, 0, 0.1);
  -moz-box-shadow: 0px 2px 5px 1px rgba(0, 0, 0, 0.1);
  box-shadow: 0px 2px 5px 1px rgba(0, 0, 0, 0.1);
}

@mixin text-stroke($color: #000, $size: 1px) {
  text-shadow:
    -#{$size} -#{$size} 0 $color,
     0        -#{$size} 0 $color,
     #{$size} -#{$size} 0 $color,
     #{$size}  0        0 $color,
     #{$size}  #{$size} 0 $color,
     0         #{$size} 0 $color,
    -#{$size}  #{$size} 0 $color,
    -#{$size}  0        0 $color;
}